<body style="background-image:url(http://i.imgur.com/lR0O3Wm.jpg); color:black;">
    <div>
        <h1 style="color:darkblue; text-align:center; border:solid; border-color:indigo;" class="container; alert-danger"> Series and Game Characters </h1>
    </div>

    <div class="row; alert-danger" style="color:crimson; border:solid; border-color:darkblue;" ;>
        <div class="col-md-4">
            <h2>Series List</h2>
            <input type="button" value="Get Series" class="btn btn-primary" onclick="getSeries()" />
            <select id="series-list" size="5" onchange="characterSelected()" style="width:100%"></select>        
        </div>

        <div class="col-md-4">
            <h2>Series Characters</h2>
            <input type="button" value="Get All Characters" class="btn btn-primary" onclick="getGameCharacters()" />
            <select id="gamecharacters-list" size="5" onchange="characterSelected()" style="width:100%"></select>        
        </div>

        <div class="row; text-center";>
            <div class="col-md-4">
                <h2>Thumbnail</h2>
                <img id="imgThumnail" width="300" height="300" style="color:black" />
            </div>
            <div class="row">
                <h2 style="text-align: center">Paragraph about Series/Character</h2>
            </div>
            <p>



            </p>

            <ul id="tp-list" class="list-group" style="color:darkgrey"></ul>

            <input type="button" value="Get Thumbnail/Paragrapgh" class="btn btn-primary" onclick="getTP()" />
        </div>


        <p>
            An approch to getting the summary / leading paragraphs / section 0 out
            of Wikipedia articlies within the browser using JSONP with the Wikipedia
            API.
        </p>

        <h2>Insert into textarea</h2>

        <textarea id="textarea"></textarea>
        <br>

        <h2>Insert into div</h2>

        <div id="div_text"></div>
    </div>
</body>
<script>

    function clearList()
    {
        $('Series-list').empty();
    }

    function getSeries() {
        clearList();
        var uri = "http://localhost:59869/api/Series/";
        $.getJSON(uri).done(function (data) {
            $.each(data, function (key, item) {
                $('<option>', { text: item.ID + ":" + item.Name }).appendTo($('#series-list'));
            });
        });
    }

    var currentSeries;

    function getGameCharacters() {
        clearList();
        var uri = "http://localhost:59869/api/GameCharacters";
        $.getJSON(uri).done(function (data) {
            $.each(data, function (key, item) {
                $('<option>', { text: item.ID + ":" + item.Name }).appendTo($('#gamecharacters-list'));
            });
        });
    }

    function getTP() {
        clearList();
        var uri = "http://localhost:59869/api/gamechracters/";
        $.getJSON(uri).done(function (data) {
            $.each(data, function (key, item) {
                $('<li>', { text: item.ID + ":" + item.Name }).appendTo($('#tp-list'));
            });
        });
    }

    function getGameCharactersForSeries() {
        var uri = "http://metalgear.wikia.com/wiki/Metal_Gear_Wiki";
        var id = $('#seriesID').val();
        $('#gamecharacters-list').empty();

        $.getJSON(uri + id).done(
            function (data) {
                if (data.GameCharacters) {
                    $.each(data.GameCharacters, function (i, item) {
                        $('<li>', { text: item.Name }).appendTo($('#gamecharacters-list'));
                    });
                }
            })
    }

    function SeriesSelected() {

        $('#lstComics').empty();

        var timestamp = Date.now();
        var hash = createHash(timestamp);
        var characterID = $('#series-list option:selected').attr('id');
        var suffix = 'characters/' + characterID;
        var completeURL = uri + suffix + '?&ts=' + timestamp + '&apikey=' + publicKey + '&hash=' + hash;

        $.ajax(
            {
                type: 'GET',
                dataType: 'json',
                url: completeURL,
                processData: true,
                success: function (data, status) {
                    var imageSource = data.data.results[0].thumbnail.path + '.' + data.data.results[0].thumbnail.extension;
                    $("#imgThumnail").attr("src", imageSource);

                    $.each(data.data.results[0].comics.items, function (key, item) {
                        $('<p>', { text: item.name }).appendTo('#lstComics');
                    });

                },
                error: function (jqXHR, errorThrown) { alert(jqXHR.status) },
            })
    }

    function characterSelected() {

        $('#series-list').empty();

        var timestamp = Date.now();
        var hash = createHash(timestamp);
        var characterID = $('#lstCharacters option:selected').attr('id');
        var suffix = 'characters/' + characterID;
        var completeURL = uri + suffix + '?&ts=' + timestamp + '&apikey=' + publicKey + '&hash=' + hash;

        $.ajax(
            {
                type: 'GET',
                dataType: 'json',
                url: completeURL,
                processData: true,
                success: function (data, status) {
                    var imageSource = data.data.results[0].thumbnail.path + '.' + data.data.results[0].thumbnail.extension;
                    $("#imgThumnail").attr("src", imageSource);

                    $.each(data.data.results[0].comics.items, function (key, item) {
                        $('<li>', { text: item.name }).appendTo('#lstComics');
                    });

                },
                error: function (jqXHR, errorThrown) { alert(jqXHR.status) },
            })
    }

    $(document).ready(function() {
        var image = $("<img>");
        var div = $("<div>")
        image.load(function() {
            div.css({
                "width": this.width,
                "height": this.height,
                "background-image": "url(" + this.src + ")"
            });
            $("#container").append(div);
        });
        image.attr("src", "WP.jpg");
    });

    var url = "http://en.wikipedia.org/wiki/Stack_Overflow";
    var title = url.split("/");
    title = title[title.length - 1];

    //Get Leading paragraphs (section 0)
    $.getJSON("http://en.wikipedia.org/w/api.php?action=parse&page=" + title + "&prop=text&section=0&format=json&callback=?", function (data) {
        for (text in data.parse.text) {
            var text = data.parse.text[text].split("<p>");
            var pText = "";

            for (p in text) {
                //Remove html comment
                text[p] = text[p].split("<!--");
                if (text[p].length > 1) {
                    text[p][0] = text[p][0].split(/\r\n|\r|\n/);
                    text[p][0] = text[p][0][0];
                    text[p][0] += "</p> ";
                }
                text[p] = text[p][0];

                //Construct a string from paragraphs
                if (text[p].indexOf("</p>") == text[p].length - 5) {
                    var htmlStrip = text[p].replace(/<(?:.|\n)*?>/gm, '') //Remove HTML
                    var splitNewline = htmlStrip.split(/\r\n|\r|\n/); //Split on newlines
                    for (newline in splitNewline) {
                        if (splitNewline[newline].substring(0, 11) != "Cite error:") {
                            pText += splitNewline[newline];
                            pText += "\n";
                        }
                    }
                }
            }
            pText = pText.substring(0, pText.length - 2); //Remove extra newline
            pText = pText.replace(/\[\d+\]/g, ""); //Remove reference tags (e.x. [1], [4], etc)
            document.getElementById('textarea').value = pText
            document.getElementById('div_text').innerHTML = pText
        }
    });


</script>